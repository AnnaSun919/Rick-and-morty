{"version":3,"sources":["Component/DropdownMenu/DropDown.js","Component/DropdownMenu/DropdownItem.js","Component/Backdrop/Backdrop.js","config.js","Component/singleCharater.js","img/Rick_and_Morty_logo.png","Component/character.js","App.js","reportWebVitals.js","index.js"],"names":["Dropdownmenu","props","pageNoArr","className","map","elem","index","onClick","e","onShow","onOpen","DropdownItem","type","pageNo","open","children","backdrop","API_URL","SingleCharater","characterNo","useState","details","setDetails","useEffect","getcharacter","character","a","axios","get","response","console","log","data","err","request","name","onHandleDetails","src","image","alt","status","species","gender","origin","episode","ele","replace","Character","totalPage","totalCharacter","basic","setBasic","APIpage","setAPIPage","setCharacterNo","setPageNoArr","date","setDate","serachItem","setSeachItem","searchOther","setSearchOther","findNothing","setfindNothing","showDetail","setShowDetail","n","setn","setOpen","setPageNo","dataArray","searchValue","searchValue1","searchValue2","test","page","info","pages","push","results","filter","created","flat","i","responseData","count","length","pageArr","hanldDetails","number","show","preventDefault","forSetAPI","Math","ceil","pageHelper","forOpen","logo","onSubmit","event","target","startDate","endDate","value","placeholder","Array","from","document","querySelectorAll","forEach","input","slice","element","id","Backdrop","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.15c67fa7.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Dropdownmenu(props) {\n  const pageNoArr = props.props;\n\n  return (\n    <>\n      <div className=\"dropdown\">\n        <div className=\"menu\">\n          {pageNoArr.map((elem, index) => (\n            <div\n              key={index}\n              onClick={(e) => {\n                props.onShow(e, elem);\n                props.onOpen();\n              }}\n            >\n              {elem}\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\nexport default Dropdownmenu;\n","import React from \"react\";\n\nfunction DropdownItem(props) {\n  return (\n    <div className=\"nav-item\">\n      <button type=\"button\" onClick={() => props.onOpen()}>\n        Page {props.pageNo} â–¾\n      </button>\n\n      {props.open && props.children}\n    </div>\n  );\n}\n\nexport default DropdownItem;\n","import React from \"react\";\n\nconst backdrop = (props) => <div className=\"backdrop\"></div>;\n\nexport default backdrop;\n","let API_URL = \"https://rickandmortyapi.com/api\";\n\nexport { API_URL };\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction SingleCharater(props) {\n  const { characterNo } = props;\n  const [details, setDetails] = useState(null);\n  // const [no, setNo] = useState(null);\n\n  useEffect(() => {\n    if (characterNo) {\n      try {\n        async function getcharacter(character) {\n          let response = await axios.get(\n            `https://rickandmortyapi.com/api/character/${character}`\n          );\n          console.log(response.data);\n          setDetails(response.data);\n        }\n\n        getcharacter(characterNo);\n      } catch (err) {\n        return err.request;\n      }\n    }\n  }, [characterNo]);\n\n  return (\n    <>\n      <div>\n        {details && (\n          <>\n            <div className=\"box2\">\n              <h1>{details.name}</h1>\n              <button\n                onClick={(e) => {\n                  props.onHandleDetails(e, null, \"close\");\n                }}\n              >\n                X\n              </button>\n              <div className=\"info_box\">\n                <img src={details.image} alt=\"character\" />\n                <span>\n                  Status : {details.status}\n                  <br />\n                  Species : {details.species}\n                  <br />\n                  Gender : {details.gender}\n                  <br />\n                  Orign : {details.origin.name}\n                  <br />\n                  Episode :\n                  {details.episode.map((ele, index) => (\n                    <div key={index}>\n                      Appeared Episode : EP{ele.replace(/[^0-9]/g, \"\")}\n                    </div>\n                  ))}\n                </span>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default SingleCharater;\n","export default __webpack_public_path__ + \"static/media/Rick_and_Morty_logo.42c8df0b.png\";","import React, { useState, useEffect } from \"react\";\nimport Dropdownmenu from \"./DropdownMenu/DropDown\";\nimport DropdownItem from \"./DropdownMenu/DropdownItem\";\nimport axios from \"axios\";\nimport Backdrop from \"./Backdrop/Backdrop\";\nimport { API_URL } from \"../config\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport SingleCharater from \"./singleCharater\";\nimport logo from \"../img/Rick_and_Morty_logo.png\";\n\nfunction Character() {\n  //jest\n  //too many useState\n\n  //all characters render info\n  let [basic, setBasic] = useState({\n    totalPage: \"\",\n    totalCharacter: \"\",\n    character: \"\",\n  });\n\n  //setting page , for url\n  let [APIpage, setAPIPage] = useState(1);\n  const [characterNo, setCharacterNo] = useState(null);\n\n  const [pageNoArr, setPageNoArr] = useState([]);\n  const [date, setDate] = useState(false);\n\n  let [serachItem, setSeachItem] = useState(null);\n  const [searchOther, setSearchOther] = useState(false);\n  const [findNothing, setfindNothing] = useState(null);\n\n  //for showing single character info\n  const [showDetail, setShowDetail] = useState(false);\n\n  let [n, setn] = useState(0);\n\n  const [open, setOpen] = useState(false);\n  const [pageNo, setPageNo] = useState(1);\n\n  useEffect(() => {\n    async function getcharacter() {\n      let dataArray = [];\n\n      let response = await axios.get(`${API_URL}/character/?page=${APIpage}`);\n\n      if (serachItem) {\n        if (searchOther) {\n          let searchValue = serachItem[\"species\"];\n          let searchValue1 = serachItem[\"status\"];\n          let searchValue2 = serachItem[\"name\"];\n          try {\n            response = await axios.get(\n              `${API_URL}/character/?page=${APIpage}&status=${searchValue1}&species=${searchValue}&name=${searchValue2}`\n            );\n          } catch (err) {\n            setfindNothing(\"No Character found\");\n          }\n\n          if (date) {\n            let test = [];\n            let page = 1;\n            let totalPage = response.data.info.pages;\n            while (page <= totalPage) {\n              response = await axios.get(\n                `${API_URL}/character/?page=${page}&status=${searchValue1}&species=${searchValue}&name=${searchValue2}`\n              );\n              page++;\n\n              test.push(\n                response.data.results.filter((elem) => {\n                  return (\n                    serachItem[\"startDate\"] <= elem.created &&\n                    elem.created <= serachItem[\"endDate\"]\n                  );\n                })\n              );\n            }\n\n            dataArray = test.flat();\n          }\n        } else if (date) {\n          let response = await axios.get(\n            `${API_URL}/character/?page=${APIpage}`\n          );\n\n          let totalPage = response.data.info.pages;\n          let i = 1;\n          let test = [];\n\n          while (totalPage >= i) {\n            let responseData = await axios.get(\n              `${API_URL}/character/?page=${i}`\n            );\n            i++;\n\n            test.push(\n              responseData.data.results.filter((elem) => {\n                return (\n                  serachItem[\"startDate\"] <= elem.created &&\n                  elem.created <= serachItem[\"endDate\"]\n                );\n              })\n            );\n          }\n          dataArray = test.flat();\n        }\n      }\n\n      pageNo(response.data.info.count);\n      setBasic({\n        totalCharacter: response.data.info.count,\n        character: response.data.results,\n        totalPage: response.data.info.pages,\n      });\n\n      if (date) {\n        if (dataArray.length === 0) {\n          setfindNothing(\"Find no informaion\");\n        }\n\n        setBasic({\n          totalCharacter: dataArray.length,\n          character: dataArray,\n        });\n\n        pageNo(dataArray.length);\n      }\n    }\n\n    const pageNo = (totalCharacter) => {\n      let totalPage = 0;\n      totalCharacter % 10 === 0\n        ? (totalPage = totalCharacter / 10)\n        : (totalPage = totalCharacter / 10 + 1);\n\n      const pageArr = [];\n      for (let i = 1; i <= totalPage; i++) {\n        pageArr.push(i);\n      }\n\n      setPageNoArr(pageArr);\n    };\n\n    getcharacter();\n  }, [serachItem, APIpage, date, searchOther]);\n\n  //function for searching\n  const handleSearch = (event) => {\n    event.preventDefault();\n    setfindNothing(null);\n    setAPIPage(1);\n    setPageNo(1);\n    forSetAPI(event, 1);\n\n    const { species, name, status, startDate, endDate } = event.target;\n    if ((startDate.value, endDate.value)) {\n      setDate(true);\n    }\n    if (species.value || species.value || name.value) {\n      setSearchOther(true);\n    } else if ((!startDate.value, !endDate.value)) {\n      setDate(false);\n    }\n\n    setSeachItem({\n      species: species.value,\n      name: name.value,\n      status: status.value,\n      startDate: startDate.value,\n      endDate: endDate.value,\n    });\n  };\n\n  //function for handling singlecharacter info\n  const hanldDetails = (e, number, show) => {\n    e.preventDefault();\n\n    if (show === \"close\") {\n      setShowDetail(false);\n    } else {\n      setCharacterNo(number);\n      setShowDetail(true);\n    }\n  };\n\n  //function for page drop down menu to set APIpage\n  const forSetAPI = (e, elem) => {\n    e.preventDefault();\n    if (!date) {\n      elem % 2 === 0 ? setAPIPage(elem / 2) : setAPIPage(Math.ceil(elem / 2));\n    }\n    pageHelper(elem);\n  };\n  //function handling page selector\n  const pageHelper = (elem) => {\n    setPageNo(elem);\n    if (date) {\n      setn(elem * 10 - 10, elem * 10);\n    } else {\n      if (elem % 2 === 0) {\n        setn(10);\n      } else {\n        setn(0);\n      }\n    }\n  };\n  //clear for info\n  const handleClear = (event) => {\n    event.preventDefault();\n    Array.from(document.querySelectorAll(\"input\")).forEach(\n      (input) => (input.value = \"\")\n    );\n    setDate(false);\n  };\n\n  //handle page selector opening\n  const forOpen = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <div className=\"box\">\n      <img src={logo} alt=\"rick and morty\" />\n      <DropdownItem onOpen={forOpen} open={open} pageNo={pageNo}>\n        <Dropdownmenu props={pageNoArr} onShow={forSetAPI} onOpen={forOpen} />\n      </DropdownItem>\n      <form onSubmit={handleSearch}>\n        <label>Species</label>\n        <input placeholder=\"Filter Species\" name=\"species\" />\n        <label>Name</label>\n        <input placeholder=\"Filter Name\" name=\"name\" />\n        <label>Status</label>\n        <input placeholder=\"Filter Status\" name=\"status\" />\n        <br />\n        <label>Created Date: From </label>\n        <input placeholder=\"Filter Status\" name=\"startDate\" type=\"date\" />\n        to\n        <input placeholder=\"Filter Status\" name=\"endDate\" type=\"date\" />\n        <button type=\"submit\">Submit</button>\n        <button type=\"button\" onClick={handleClear}>\n          Clear\n        </button>\n      </form>\n      <span>{findNothing && <span>{findNothing}</span>}</span>\n      {!findNothing && (\n        <div className=\"character_container\">\n          {basic.character &&\n            basic.character.slice(n, n + 10).map((element, index) => (\n              <>\n                <div\n                  key={index}\n                  className=\"item\"\n                  onClick={(e) => {\n                    hanldDetails(e, element.id, \"open\");\n                  }}\n                >\n                  <img src={element.image} alt=\"img\" />\n                  <br />\n                  <span>{element.name}</span>\n                  <br />\n                  <span>{element.species}</span>\n                  <br />\n                  <span>{element.status}</span>\n                  <br />\n                  <span>{element.created.slice(0, 10)}</span>\n                  <br />\n                </div>\n              </>\n            ))}\n        </div>\n      )}\n      {showDetail && <Backdrop />}\n      {showDetail && (\n        <SingleCharater\n          characterNo={characterNo}\n          onHandleDetails={hanldDetails}\n        />\n      )}{\" \"}\n    </div>\n  );\n}\nexport default Character;\n","import \"./docs/App.css\";\nimport Character from \"./Component/character\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Character />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}