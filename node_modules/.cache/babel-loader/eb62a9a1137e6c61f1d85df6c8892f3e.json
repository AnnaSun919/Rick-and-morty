{"ast":null,"code":"var _jsxFileName = \"/Users/annasun/Desktop/IH-MAY-2021/Assignment/rick_and_morty/src/Component/character.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Dropdown, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport SingleCharater from \"./singleCharater\";\nimport { API_URL } from \"../config\";\nimport \"./chracter.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Character() {\n  _s();\n\n  let [totalPage, setTotalPage] = useState(null);\n  let [page, setPage] = useState(1);\n  let [APIpage, setAPIPage] = useState(1);\n  const [character, setCharacter] = useState(null);\n  let [serachItem, setSeachItem] = useState({\n    species: \"\",\n    status: \"\",\n    name: \"\"\n  });\n  const [pageNoArr, setPageNoArr] = useState([]); // const checkPage = () => {};\n\n  useEffect(() => {\n    try {\n      async function getcharacter() {\n        let response = await axios.get(`${API_URL}/character/?page=${APIpage}`);\n\n        if (serachItem) {\n          if (serachItem[\"status\"] || serachItem[\"species\"] || serachItem[\"name\"]) {\n            let searchValue = serachItem[\"species\"];\n            let searchValue1 = serachItem[\"status\"];\n            let searchValue2 = serachItem[\"name\"];\n            response = await axios.get(`${API_URL}/character/?page=${APIpage}&status=${searchValue1}&species=${searchValue}&name=${searchValue2}`);\n          } // else if (serachItem[\"species\"]) {\n          //   searchValue = serachItem[\"species\"];\n          //   response = await axios.get(\n          //     `${API_URL}/character/?page=${page}&species=${searchValue}`\n          //   );\n          // } else if (serachItem[\"status\"]) {\n          //   searchValue = serachItem[\"status\"];\n          //   response = await axios.get(\n          //     `${API_URL}/character/?page=${page}&status=${searchValue}`\n          //   );\n          // } else if (serachItem[\"name\"]) {\n          //   searchValue = serachItem[\"name\"];\n          //   response = await axios.get(\n          //     `${API_URL}/character/?page=${page}&name=${searchValue}`\n          //   );\n          // }\n\n        }\n\n        console.log(response.data.info);\n        setTotalPage(response.data.info.pages);\n        setCharacter(response.data.results);\n      }\n\n      const pageNo = totalPage => {\n        const pageArr = [];\n\n        for (let i = 1; i <= totalPage; i++) {\n          pageArr.push(i);\n        }\n\n        setPageNoArr(pageArr);\n      };\n\n      pageNo(totalPage);\n      getcharacter();\n    } catch (err) {}\n  }, [page, serachItem, APIpage, totalPage]);\n\n  function changePage(event, direction) {\n    event.preventDefault();\n\n    if (direction === \"before\" && page > 1) {\n      setPage(page -= 1);\n\n      if (page % 2 !== 0) {\n        setAPIPage(APIpage -= 1);\n      }\n    } else if (direction === \"after\" && totalPage > page) {\n      setPage(page += 1);\n\n      if (page % 2 !== 0) {\n        setAPIPage(APIpage += 1);\n      }\n    }\n\n    return true;\n  }\n\n  const handlePageSelertor = (e, elem) => {\n    e.preventDefault();\n    console.log();\n    setAPIPage(elem);\n  };\n\n  const handleSearch = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setSeachItem(state => ({ ...state,\n      [name]: value\n    }));\n  };\n\n  console.log(character);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true // path=\"/\"\n        ,\n        render: routeProps => {\n          return /*#__PURE__*/_jsxDEV(\"singleCharacter\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 20\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Character\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: \"success\",\n          id: \"dropdown-basic\",\n          children: [APIpage, \" PAGE\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: pageNoArr.map(elem => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: e => handlePageSelertor(e, elem),\n            children: [elem, \" PAGE\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), \"Species\", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Filter Species\",\n        name: \"species\",\n        onChange: e => handleSearch(e, \"species\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), \"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Filter Name\",\n        name: \"name\",\n        onChange: e => handleSearch(e, \"name\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), \"Status\", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Filter Status\",\n        name: \"status\",\n        onChange: e => handleSearch(e, \"status\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"grid\", {\n        children: character && character.slice(0, 10).map((element, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: element.url,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: element.image,\n                alt: \"img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: element.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: element.species\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: element.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: element.created\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this)\n        }, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: e => changePage(e, \"before\"),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: e => changePage(e, \"after\"),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Character, \"tHdapcdGdBojT1JbWQf6sGhbZhU=\");\n\n_c = Character;\nexport default Character;\n\nvar _c;\n\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"sources":["/Users/annasun/Desktop/IH-MAY-2021/Assignment/rick_and_morty/src/Component/character.js"],"names":["React","useState","useEffect","Switch","Route","Dropdown","Button","axios","SingleCharater","API_URL","Character","totalPage","setTotalPage","page","setPage","APIpage","setAPIPage","character","setCharacter","serachItem","setSeachItem","species","status","name","pageNoArr","setPageNoArr","getcharacter","response","get","searchValue","searchValue1","searchValue2","console","log","data","info","pages","results","pageNo","pageArr","i","push","err","changePage","event","direction","preventDefault","handlePageSelertor","e","elem","handleSearch","value","target","state","routeProps","map","slice","element","index","url","image","created"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Dropdown, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport SingleCharater from \"./singleCharater\";\nimport { API_URL } from \"../config\";\nimport \"./chracter.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction Character() {\n  let [totalPage, setTotalPage] = useState(null);\n  let [page, setPage] = useState(1);\n  let [APIpage, setAPIPage] = useState(1);\n\n  const [character, setCharacter] = useState(null);\n  let [serachItem, setSeachItem] = useState({\n    species: \"\",\n    status: \"\",\n    name: \"\",\n  });\n  const [pageNoArr, setPageNoArr] = useState([]);\n\n  // const checkPage = () => {};\n\n  useEffect(() => {\n    try {\n      async function getcharacter() {\n        let response = await axios.get(`${API_URL}/character/?page=${APIpage}`);\n        if (serachItem) {\n          if (\n            serachItem[\"status\"] ||\n            serachItem[\"species\"] ||\n            serachItem[\"name\"]\n          ) {\n            let searchValue = serachItem[\"species\"];\n            let searchValue1 = serachItem[\"status\"];\n            let searchValue2 = serachItem[\"name\"];\n            response = await axios.get(\n              `${API_URL}/character/?page=${APIpage}&status=${searchValue1}&species=${searchValue}&name=${searchValue2}`\n            );\n          }\n          // else if (serachItem[\"species\"]) {\n          //   searchValue = serachItem[\"species\"];\n          //   response = await axios.get(\n          //     `${API_URL}/character/?page=${page}&species=${searchValue}`\n          //   );\n          // } else if (serachItem[\"status\"]) {\n          //   searchValue = serachItem[\"status\"];\n          //   response = await axios.get(\n          //     `${API_URL}/character/?page=${page}&status=${searchValue}`\n          //   );\n          // } else if (serachItem[\"name\"]) {\n          //   searchValue = serachItem[\"name\"];\n          //   response = await axios.get(\n          //     `${API_URL}/character/?page=${page}&name=${searchValue}`\n          //   );\n          // }\n        }\n        console.log(response.data.info);\n        setTotalPage(response.data.info.pages);\n        setCharacter(response.data.results);\n      }\n\n      const pageNo = (totalPage) => {\n        const pageArr = [];\n        for (let i = 1; i <= totalPage; i++) {\n          pageArr.push(i);\n        }\n        setPageNoArr(pageArr);\n      };\n      pageNo(totalPage);\n      getcharacter();\n    } catch (err) {}\n  }, [page, serachItem, APIpage, totalPage]);\n\n  function changePage(event, direction) {\n    event.preventDefault();\n\n    if (direction === \"before\" && page > 1) {\n      setPage((page -= 1));\n\n      if (page % 2 !== 0) {\n        setAPIPage((APIpage -= 1));\n      }\n    } else if (direction === \"after\" && totalPage > page) {\n      setPage((page += 1));\n\n      if (page % 2 !== 0) {\n        setAPIPage((APIpage += 1));\n      }\n    }\n    return true;\n  }\n\n  const handlePageSelertor = (e, elem) => {\n    e.preventDefault();\n    console.log();\n    setAPIPage(elem);\n  };\n\n  const handleSearch = (event) => {\n    const { value, name } = event.target;\n    setSeachItem((state) => ({ ...state, [name]: value }));\n  };\n\n  console.log(character);\n  return (\n    <>\n      {\" \"}\n      <Switch>\n        <Route\n          exact\n          // path=\"/\"\n          render={(routeProps) => {\n            return <singleCharacter />;\n          }}\n        />\n        <h1>Character</h1>\n        <Dropdown>\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n            {APIpage} PAGE\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            {pageNoArr.map((elem) => (\n              <Dropdown.Item onClick={(e) => handlePageSelertor(e, elem)}>\n                {elem} PAGE\n              </Dropdown.Item>\n            ))}\n          </Dropdown.Menu>\n        </Dropdown>\n        Species\n        <input\n          placeholder=\"Filter Species\"\n          name=\"species\"\n          onChange={(e) => handleSearch(e, \"species\")}\n        />\n        Name\n        <input\n          placeholder=\"Filter Name\"\n          name=\"name\"\n          onChange={(e) => handleSearch(e, \"name\")}\n        />\n        Status\n        <input\n          placeholder=\"Filter Status\"\n          name=\"status\"\n          onChange={(e) => handleSearch(e, \"status\")}\n        />\n        <grid>\n          {character &&\n            character.slice(0, 10).map((element, index) => (\n              <>\n                <div key={index} className=\"item\">\n                  <a href={element.url}>\n                    <img src={element.image} alt=\"img\" />\n                    <br />\n                    <span>{element.name}</span>\n                    <span>{element.species}</span>\n                    <br />\n                    <span>{element.status}</span>\n                    <span>{element.created}</span>\n                  </a>\n                </div>\n              </>\n            ))}\n          {/* {pageInfo && (\n          <>\n            <span>{pageInfo.count}</span>\n            <span>{pageInfo}</span>\n          </>\n        )} */}\n        </grid>\n        <Button onClick={(e) => changePage(e, \"before\")}>-</Button>\n        <span>{page}</span>\n        <Button onClick={(e) => changePage(e, \"after\")}>+</Button>\n      </Switch>\n    </>\n  );\n}\n\nexport default Character;\n"]},"metadata":{},"sourceType":"module"}