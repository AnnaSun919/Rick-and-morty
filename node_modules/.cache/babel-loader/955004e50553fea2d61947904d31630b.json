{"ast":null,"code":"var _jsxFileName = \"/Users/annasun/Desktop/IH-MAY-2021/Assignment/rick_and_morty/src/Component/singleCharater.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./singleCharacter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SingleCharater(props) {\n  _s();\n\n  const {\n    characterNo\n  } = props;\n  const [details, setDetails] = useState(null);\n  const [episode, setEpisode] = useState(null);\n  useEffect(() => {\n    try {\n      async function getcharacter(character) {\n        let response = await axios.get(`https://rickandmortyapi.com/api/character/${character}`);\n        console.log(response.data);\n        setDetails(response.data);\n      }\n\n      async function getEpisode() {\n        let response = await axios.get(`https://rickandmortyapi.com/api/episode`);\n        setEpisode(response.data);\n      }\n\n      getEpisode();\n      getcharacter(characterNo);\n    } catch (err) {\n      console.log(err);\n    }\n  }, [characterNo]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: details && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              props.onHandleDetails(e, null, \"close\");\n            },\n            children: \"XXX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: details.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: details.image,\n            alt: \"character\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Status : \", details.status, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), \"Species : \", details.species, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), \"Gender : \", details.gender, \"Orign : \", details.origin.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), \"Episode :\", details.episode.map(ele => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Appeared Episode : EP\", ele.replace(/[^0-9]/g, \"\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, \"1\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SingleCharater, \"4f57fIAQCSw+YcI/n+ZLrFzusoM=\");\n\n_c = SingleCharater;\nexport default SingleCharater;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleCharater\");","map":{"version":3,"sources":["/Users/annasun/Desktop/IH-MAY-2021/Assignment/rick_and_morty/src/Component/singleCharater.js"],"names":["axios","React","useEffect","useState","SingleCharater","props","characterNo","details","setDetails","episode","setEpisode","getcharacter","character","response","get","console","log","data","getEpisode","err","e","onHandleDetails","name","image","status","species","gender","origin","map","ele","replace"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,uBAAP;;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,KAAxB;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACF,qBAAeS,YAAf,CAA4BC,SAA5B,EAAuC;AACrC,YAAIC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAClB,6CAA4CF,SAAU,EADpC,CAArB;AAGAG,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACAT,QAAAA,UAAU,CAACK,QAAQ,CAACI,IAAV,CAAV;AACD;;AAED,qBAAeC,UAAf,GAA4B;AAC1B,YAAIL,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAClB,yCADkB,CAArB;AAGAJ,QAAAA,UAAU,CAACG,QAAQ,CAACI,IAAV,CAAV;AACD;;AACDC,MAAAA,UAAU;AACVP,MAAAA,YAAY,CAACL,WAAD,CAAZ;AACD,KAjBD,CAiBE,OAAOa,GAAP,EAAY;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD;AACF,GArBQ,EAqBN,CAACb,WAAD,CArBM,CAAT;AAuBA,sBACE;AAAA,2BACE;AAAA,gBACGC,OAAO,iBACN;AAAA,+BACE;AAAa,UAAA,SAAS,EAAC,WAAvB;AAAA,kCACE;AACE,YAAA,OAAO,EAAGa,CAAD,IAAO;AACdf,cAAAA,KAAK,CAACgB,eAAN,CAAsBD,CAAtB,EAAyB,IAAzB,EAA+B,OAA/B;AACD,aAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAA,sBAAKb,OAAO,CAACe;AAAb;AAAA;AAAA;AAAA;AAAA,kBARF,eASE;AAAK,YAAA,GAAG,EAAEf,OAAO,CAACgB,KAAlB;AAAyB,YAAA,GAAG,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE;AAAA,oCACYhB,OAAO,CAACiB,MADpB,eAEE;AAAA;AAAA;AAAA;AAAA,oBAFF,gBAGajB,OAAO,CAACkB,OAHrB,eAIE;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKYlB,OAAO,CAACmB,MALpB,cAMWnB,OAAO,CAACoB,MAAR,CAAeL,IAN1B,eAOE;AAAA;AAAA;AAAA;AAAA,oBAPF,eASGf,OAAO,CAACE,OAAR,CAAgBmB,GAAhB,CAAqBC,GAAD,iBACnB;AAAA,kDAA2BA,GAAG,CAACC,OAAJ,CAAY,SAAZ,EAAuB,EAAvB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,CATH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA,WAAS,GAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkCD;;GA9DQ1B,c;;KAAAA,c;AAgET,eAAeA,cAAf","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./singleCharacter.css\";\n\nfunction SingleCharater(props) {\n  const { characterNo } = props;\n  const [details, setDetails] = useState(null);\n  const [episode, setEpisode] = useState(null);\n\n  useEffect(() => {\n    try {\n      async function getcharacter(character) {\n        let response = await axios.get(\n          `https://rickandmortyapi.com/api/character/${character}`\n        );\n        console.log(response.data);\n        setDetails(response.data);\n      }\n\n      async function getEpisode() {\n        let response = await axios.get(\n          `https://rickandmortyapi.com/api/episode`\n        );\n        setEpisode(response.data);\n      }\n      getEpisode();\n      getcharacter(characterNo);\n    } catch (err) {\n      console.log(err);\n    }\n  }, [characterNo]);\n\n  return (\n    <>\n      <div>\n        {details && (\n          <>\n            <div key=\"1\" className=\"container\">\n              <button\n                onClick={(e) => {\n                  props.onHandleDetails(e, null, \"close\");\n                }}\n              >\n                XXX\n              </button>\n              <h1>{details.name}</h1>\n              <img src={details.image} alt=\"character\" />\n              <span>\n                Status : {details.status}\n                <br />\n                Species : {details.species}\n                <br />\n                Gender : {details.gender}\n                Orign : {details.origin.name}\n                <br />\n                Episode :\n                {details.episode.map((ele) => (\n                  <div>Appeared Episode : EP{ele.replace(/[^0-9]/g, \"\")}</div>\n                ))}\n              </span>\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default SingleCharater;\n"]},"metadata":{},"sourceType":"module"}