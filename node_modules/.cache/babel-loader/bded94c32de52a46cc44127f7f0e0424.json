{"ast":null,"code":"var _jsxFileName = \"/Users/annasun/Desktop/IH-MAY-2021/Assignment/rick_and_morty/src/Component/singleCharater.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SingleCharater(props) {\n  _s();\n\n  const {\n    characterNo\n  } = props;\n  const [details, setDetails] = useState(null); // const [no, setNo] = useState(null);\n\n  useEffect(() => {\n    if (characterNo) {\n      try {\n        async function getcharacter(character) {\n          let response = await axios.get(`https://rickandmortyapi.com/api/character/${character}`);\n          console.log(response.data);\n          setDetails(response.data);\n        }\n\n        getcharacter(characterNo);\n      } catch (err) {\n        return err.request;\n      }\n    }\n  }, [characterNo]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: details && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: details.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              props.onHandleDetails(e, null, \"close\");\n            },\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: details.image,\n              alt: \"character\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Status : \", details.status, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this), \"Species : \", details.species, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this), \"Gender : \", details.gender, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this), \"Orign : \", details.origin.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this), \"Episode :\", details.episode.map((ele, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Appeared Episode : EP\", ele.replace(/[^0-9]/g, \"\")]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SingleCharater, \"RCW4M5B3y402eqKEmzZQf8A0VVM=\");\n\n_c = SingleCharater;\nexport default SingleCharater;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleCharater\");","map":{"version":3,"sources":["/Users/annasun/Desktop/IH-MAY-2021/Assignment/rick_and_morty/src/Component/singleCharater.js"],"names":["axios","React","useEffect","useState","SingleCharater","props","characterNo","details","setDetails","getcharacter","character","response","get","console","log","data","err","request","name","e","onHandleDetails","image","status","species","gender","origin","episode","map","ele","index","replace"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,KAAxB;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC,CAF6B,CAG7B;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,WAAJ,EAAiB;AACf,UAAI;AACF,uBAAeG,YAAf,CAA4BC,SAA5B,EAAuC;AACrC,cAAIC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAClB,6CAA4CF,SAAU,EADpC,CAArB;AAGAG,UAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACAP,UAAAA,UAAU,CAACG,QAAQ,CAACI,IAAV,CAAV;AACD;;AAEDN,QAAAA,YAAY,CAACH,WAAD,CAAZ;AACD,OAVD,CAUE,OAAOU,GAAP,EAAY;AACZ,eAAOA,GAAG,CAACC,OAAX;AACD;AACF;AACF,GAhBQ,EAgBN,CAACX,WAAD,CAhBM,CAAT;AAkBA,sBACE;AAAA,2BACE;AAAA,gBACGC,OAAO,iBACN;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACE;AAAA,sBAAKA,OAAO,CAACW;AAAb;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,OAAO,EAAGC,CAAD,IAAO;AACdd,cAAAA,KAAK,CAACe,eAAN,CAAsBD,CAAtB,EAAyB,IAAzB,EAA+B,OAA/B;AACD,aAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eASE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACE;AAAK,cAAA,GAAG,EAAEZ,OAAO,CAACc,KAAlB;AAAyB,cAAA,GAAG,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,sCACYd,OAAO,CAACe,MADpB,eAEE;AAAA;AAAA;AAAA;AAAA,sBAFF,gBAGaf,OAAO,CAACgB,OAHrB,eAIE;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKYhB,OAAO,CAACiB,MALpB,eAME;AAAA;AAAA;AAAA;AAAA,sBANF,cAOWjB,OAAO,CAACkB,MAAR,CAAeP,IAP1B,eAQE;AAAA;AAAA;AAAA;AAAA,sBARF,eAUGX,OAAO,CAACmB,OAAR,CAAgBC,GAAhB,CAAoB,CAACC,GAAD,EAAMC,KAAN,kBACnB;AAAA,oDACwBD,GAAG,CAACE,OAAJ,CAAY,SAAZ,EAAuB,EAAvB,CADxB;AAAA,iBAAUD,KAAV;AAAA;AAAA;AAAA;AAAA,sBADD,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAuCD;;GA9DQzB,c;;KAAAA,c;AAgET,eAAeA,cAAf","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction SingleCharater(props) {\n  const { characterNo } = props;\n  const [details, setDetails] = useState(null);\n  // const [no, setNo] = useState(null);\n\n  useEffect(() => {\n    if (characterNo) {\n      try {\n        async function getcharacter(character) {\n          let response = await axios.get(\n            `https://rickandmortyapi.com/api/character/${character}`\n          );\n          console.log(response.data);\n          setDetails(response.data);\n        }\n\n        getcharacter(characterNo);\n      } catch (err) {\n        return err.request;\n      }\n    }\n  }, [characterNo]);\n\n  return (\n    <>\n      <div>\n        {details && (\n          <>\n            <div className=\"box2\">\n              <h1>{details.name}</h1>\n              <button\n                onClick={(e) => {\n                  props.onHandleDetails(e, null, \"close\");\n                }}\n              >\n                X\n              </button>\n              <div className=\"info_box\">\n                <img src={details.image} alt=\"character\" />\n                <span>\n                  Status : {details.status}\n                  <br />\n                  Species : {details.species}\n                  <br />\n                  Gender : {details.gender}\n                  <br />\n                  Orign : {details.origin.name}\n                  <br />\n                  Episode :\n                  {details.episode.map((ele, index) => (\n                    <div key={index}>\n                      Appeared Episode : EP{ele.replace(/[^0-9]/g, \"\")}\n                    </div>\n                  ))}\n                </span>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default SingleCharater;\n"]},"metadata":{},"sourceType":"module"}