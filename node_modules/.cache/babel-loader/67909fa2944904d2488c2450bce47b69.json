{"ast":null,"code":"var _jsxFileName = \"/Users/annasun/Desktop/IH-MAY-2021/Assignment/rick_and_morty/src/Component/character.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport \"./chracter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Character() {\n  _s();\n\n  let [page, setPage] = useState(1);\n  const [character, setCharacter] = useState(null);\n  let [serachItem, setSeachItem] = useState({\n    species: \"\",\n    status: \"\"\n  });\n  useEffect(() => {\n    try {\n      async function getcharacter() {\n        let response = await axios.get(`${API_URL}/character/?page=${page}`);\n\n        if (serachItem) {\n          let searchValue = Object.values(serachItem);\n          const searching = serachItem.every(_ref => {\n            let [key, value] = _ref;\n            console.log(searching[key], searching[value]);\n          });\n\n          if (Object.keys(serachItem) == \"status\") {\n            response = await axios.get(`${API_URL}/character/?page=${page}&status=${searchValue}`);\n          } else if (Object.keys(serachItem) == \"name\") {\n            response = await axios.get(`${API_URL}/character/?page=${page}&name=${searchValue}`);\n          } else if (Object.keys(serachItem) == \"species\") {\n            response = await axios.get(`${API_URL}/character/?page=${page}&species=${searchValue}`);\n          }\n        }\n\n        setCharacter(response.data.results);\n      }\n\n      getcharacter();\n    } catch (err) {}\n  }, [page, serachItem]);\n\n  function changePage() {\n    setPage(page += 1);\n  }\n\n  const matches = item => {\n    const inputs = serachItem;\n    const ItemEntries = Object.entries(item);\n    const matchedItem = ItemEntries.every(_ref2 => {\n      let [key, value] = _ref2;\n      const inputIsEmpty = !inputs[key];\n      if (inputIsEmpty) return true;else {\n        const valueLowercased = value.toString().toLowerCase();\n        const inputLowercased = inputs[key].trim().toLowerCase();\n        return valueLowercased.includes(inputLowercased);\n      }\n    });\n    return matchedItem;\n  };\n\n  const handleSearch = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setSeachItem({\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Character\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), \"Species\", /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Filter Species\",\n      name: \"species\",\n      onChange: e => handleSearch(e, \"species\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), \"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Filter Name\",\n      name: \"name\",\n      onChange: e => handleSearch(e, \"name\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), \"Status\", /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Filter Status\",\n      name: \"status\",\n      onChange: e => handleSearch(e, \"status\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"grid\", {\n      children: character && character.map(element => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: element.url,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: element.image,\n              alt: \"img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: element.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: element.species\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: element.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: element.created\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changePage,\n      children: page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Character, \"Fy5QfE+B+u5Er3H/l7BKSsOLRKI=\");\n\n_c = Character;\nexport default Character;\n\nvar _c;\n\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"sources":["/Users/annasun/Desktop/IH-MAY-2021/Assignment/rick_and_morty/src/Component/character.js"],"names":["React","useState","useEffect","axios","API_URL","Character","page","setPage","character","setCharacter","serachItem","setSeachItem","species","status","getcharacter","response","get","searchValue","Object","values","searching","every","key","value","console","log","keys","data","results","err","changePage","matches","item","inputs","ItemEntries","entries","matchedItem","inputIsEmpty","valueLowercased","toString","toLowerCase","inputLowercased","trim","includes","handleSearch","event","name","target","e","map","element","url","image","created"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport \"./chracter.css\";\n\nfunction Character() {\n  let [page, setPage] = useState(1);\n  const [character, setCharacter] = useState(null);\n  let [serachItem, setSeachItem] = useState({ species: \"\", status: \"\" });\n\n  useEffect(() => {\n    try {\n      async function getcharacter() {\n        let response = await axios.get(`${API_URL}/character/?page=${page}`);\n        if (serachItem) {\n          let searchValue = Object.values(serachItem);\n\n          const searching = serachItem.every(([key, value]) => {\n            console.log(searching[key], searching[value]);\n          });\n\n          if (Object.keys(serachItem) == \"status\") {\n            response = await axios.get(\n              `${API_URL}/character/?page=${page}&status=${searchValue}`\n            );\n          } else if (Object.keys(serachItem) == \"name\") {\n            response = await axios.get(\n              `${API_URL}/character/?page=${page}&name=${searchValue}`\n            );\n          } else if (Object.keys(serachItem) == \"species\") {\n            response = await axios.get(\n              `${API_URL}/character/?page=${page}&species=${searchValue}`\n            );\n          }\n        }\n\n        setCharacter(response.data.results);\n      }\n      getcharacter();\n    } catch (err) {}\n  }, [page, serachItem]);\n\n  function changePage() {\n    setPage((page += 1));\n  }\n\n  const matches = (item) => {\n    const inputs = serachItem;\n    const ItemEntries = Object.entries(item);\n\n    const matchedItem = ItemEntries.every(([key, value]) => {\n      const inputIsEmpty = !inputs[key];\n      if (inputIsEmpty) return true;\n      else {\n        const valueLowercased = value.toString().toLowerCase();\n        const inputLowercased = inputs[key].trim().toLowerCase();\n        return valueLowercased.includes(inputLowercased);\n      }\n    });\n\n    return matchedItem;\n  };\n\n  const handleSearch = (event) => {\n    const { value, name } = event.target;\n    setSeachItem({ [name]: value });\n  };\n\n  return (\n    <>\n      <h1>Character</h1>\n      Species\n      <input\n        placeholder=\"Filter Species\"\n        name=\"species\"\n        onChange={(e) => handleSearch(e, \"species\")}\n      />\n      Name\n      <input\n        placeholder=\"Filter Name\"\n        name=\"name\"\n        onChange={(e) => handleSearch(e, \"name\")}\n      />\n      Status\n      <input\n        placeholder=\"Filter Status\"\n        name=\"status\"\n        onChange={(e) => handleSearch(e, \"status\")}\n      />\n      <grid>\n        {character &&\n          character.map((element) => (\n            <>\n              <div className=\"item\">\n                <a href={element.url}>\n                  <img src={element.image} alt=\"img\" />\n                  <br />\n                  <span>{element.name}</span>\n                  <span>{element.species}</span>\n                  <br />\n                  <span>{element.status}</span>\n                  <span>{element.created}</span>\n                </a>\n              </div>\n            </>\n          ))}\n        {/* {pageInfo && (\n          <>\n            <span>{pageInfo.count}</span>\n            <span>{pageInfo}</span>\n          </>\n        )} */}\n      </grid>\n      <button onClick={changePage}>{page}</button>\n    </>\n  );\n}\n\nexport default Character;\n"]},"metadata":{},"sourceType":"module"}