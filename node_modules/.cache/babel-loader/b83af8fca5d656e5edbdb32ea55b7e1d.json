{"ast":null,"code":"var _jsxFileName = \"/Users/annasun/Desktop/IH-MAY-2021/Assignment/rick_and_morty/src/Component/character.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Backdrop from \"./Backdrop/Backdrop\";\nimport { API_URL } from \"../config\";\nimport \"./chracter.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport SingleCharater from \"./singleCharater\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Character() {\n  _s();\n\n  let [totalPage, setTotalPage] = useState(null);\n  let [totalCharacter, setTotalCharacter] = useState(null);\n  let [page, setPage] = useState(1);\n  let [APIpage, setAPIPage] = useState(1);\n  const [showDetail, setShowDetail] = useState(false);\n  const [characterNo, setCharacterNo] = useState(null);\n  const [character, setCharacter] = useState(null);\n  let [serachItem, setSeachItem] = useState(null);\n  const [pageNoArr, setPageNoArr] = useState([]); // const checkPage = () => {};\n\n  useEffect(() => {\n    try {\n      async function getcharacter() {\n        let dataArray = [];\n        let response = await axios.get(`${API_URL}/character/?page=${APIpage}`);\n\n        if (serachItem) {\n          if (serachItem[\"status\"] || serachItem[\"species\"] || serachItem[\"name\"]) {\n            let searchValue = serachItem[\"species\"];\n            let searchValue1 = serachItem[\"status\"];\n            let searchValue2 = serachItem[\"name\"];\n            response = await axios.get(`${API_URL}/character/?page=${APIpage}&status=${searchValue1}&species=${searchValue}&name=${searchValue2}`);\n          } else if (serachItem[\"startDate\"] && serachItem[\"endDate\"]) {\n            let i = 1;\n\n            while (totalCharacter > i) {\n              let responseDate = await axios.get(`${API_URL}/character/${i}`);\n              i++;\n\n              if (serachItem[\"startDate\"] <= responseDate.data.created && responseDate.data.created <= serachItem[\"endDate\"]) {\n                dataArray.push(responseDate.data);\n              }\n            }\n          }\n        }\n\n        setCharacter(response.data.results);\n        setTotalCharacter(response.data.info.count);\n        setTotalPage(response.data.info.pages);\n\n        if (dataArray.length != 0) {\n          console.log(dataArray);\n          setCharacter(dataArray);\n        }\n      }\n\n      const pageNo = totalPage => {\n        const pageArr = [];\n\n        for (let i = 1; i <= totalPage; i++) {\n          pageArr.push(i);\n        }\n\n        setPageNoArr(pageArr);\n      };\n\n      pageNo(totalPage);\n      getcharacter();\n    } catch (err) {}\n  }, [page, serachItem, APIpage, totalPage]);\n\n  function changePage(event, direction) {\n    event.preventDefault();\n\n    if (direction === \"before\" && page > 1) {\n      setPage(page -= 1);\n\n      if (page % 2 !== 0) {\n        setAPIPage(APIpage -= 1);\n      }\n    } else if (direction === \"after\" && totalPage > page) {\n      setPage(page += 1);\n\n      if (page % 2 !== 0) {\n        setAPIPage(APIpage += 1);\n      }\n    }\n\n    return true;\n  }\n\n  const handlePageSelertor = (e, elem) => {\n    e.preventDefault();\n    setAPIPage(elem);\n  };\n\n  const handleSearch = event => {\n    event.preventDefault();\n    const {\n      species,\n      name,\n      status,\n      startDate,\n      endDate\n    } = event.target;\n    setSeachItem({\n      species: species.value,\n      name: name.value,\n      status: status.value,\n      startDate: startDate.value,\n      endDate: endDate.value\n    });\n  };\n\n  const hanldDetails = (e, number, show) => {\n    e.preventDefault();\n\n    if (show == \"close\") {\n      setShowDetail(false);\n    } else {\n      setCharacterNo(number);\n      setShowDetail(true);\n    }\n  };\n\n  const handleDateSearch = (start, end) => {\n    let dataArray = []; // dataArray = character.filter((elem) => {\n    //   return start <= elem.created && elem.created <= end;\n    // });\n\n    let i = 1;\n\n    try {\n      async function getDateCharacter() {\n        while (totalCharacter > i) {\n          let responseDate = await axios.get(`${API_URL}/character/${i}`);\n          i++;\n\n          if (start <= responseDate.data.created && responseDate.data.created <= end) {\n            dataArray.push(responseDate.data);\n          }\n        }\n\n        setCharacter(dataArray);\n      }\n\n      getDateCharacter();\n    } catch (err) {\n      console.log(\"Date Err\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rick && Morty =)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        variant: \"success\",\n        id: \"dropdown-basic\",\n        children: [APIpage, \" PAGE\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        children: pageNoArr.map(elem => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          onClick: e => handlePageSelertor(e, elem),\n          children: [elem, \" PAGE\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Species\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Filter Species\",\n        name: \"species\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Filter Name\",\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Filter Status\",\n        name: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Filter Status\",\n        name: \"startDate\",\n        type: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Filter Status\",\n        name: \"endDate\",\n        type: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"grid\", {\n      children: [character && character.slice(0, 10).map((element, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          component: Link,\n          to: `/singleCharacter/${element.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            href: `/singleCharater/${element.id}`,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: element.image,\n              alt: \"img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: element.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: element.species\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: element.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: element.created\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: e => {\n                hanldDetails(e, element.id, \"open\");\n              },\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)), showDetail && /*#__PURE__*/_jsxDEV(Backdrop, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 24\n      }, this), showDetail && /*#__PURE__*/_jsxDEV(SingleCharater, {\n        characterNo: characterNo,\n        onHandleDetails: hanldDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: e => changePage(e, \"before\"),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: e => changePage(e, \"after\"),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Character, \"EM7hhW6/Ho/SeloHDk3+MGklH4w=\");\n\n_c = Character;\nexport default Character;\n\nvar _c;\n\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"sources":["/Users/annasun/Desktop/IH-MAY-2021/Assignment/rick_and_morty/src/Component/character.js"],"names":["React","useState","useEffect","Link","Dropdown","Button","axios","Backdrop","API_URL","SingleCharater","Character","totalPage","setTotalPage","totalCharacter","setTotalCharacter","page","setPage","APIpage","setAPIPage","showDetail","setShowDetail","characterNo","setCharacterNo","character","setCharacter","serachItem","setSeachItem","pageNoArr","setPageNoArr","getcharacter","dataArray","response","get","searchValue","searchValue1","searchValue2","i","responseDate","data","created","push","results","info","count","pages","length","console","log","pageNo","pageArr","err","changePage","event","direction","preventDefault","handlePageSelertor","e","elem","handleSearch","species","name","status","startDate","endDate","target","value","hanldDetails","number","show","handleDateSearch","start","end","getDateCharacter","map","slice","element","index","id","image"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Backdrop from \"./Backdrop/Backdrop\";\nimport { API_URL } from \"../config\";\nimport \"./chracter.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport SingleCharater from \"./singleCharater\";\n\nfunction Character() {\n  let [totalPage, setTotalPage] = useState(null);\n  let [totalCharacter, setTotalCharacter] = useState(null);\n  let [page, setPage] = useState(1);\n  let [APIpage, setAPIPage] = useState(1);\n  const [showDetail, setShowDetail] = useState(false);\n  const [characterNo, setCharacterNo] = useState(null);\n\n  const [character, setCharacter] = useState(null);\n  let [serachItem, setSeachItem] = useState(null);\n  const [pageNoArr, setPageNoArr] = useState([]);\n\n  // const checkPage = () => {};\n\n  useEffect(() => {\n    try {\n      async function getcharacter() {\n        let dataArray = [];\n        let response = await axios.get(`${API_URL}/character/?page=${APIpage}`);\n        if (serachItem) {\n          if (\n            serachItem[\"status\"] ||\n            serachItem[\"species\"] ||\n            serachItem[\"name\"]\n          ) {\n            let searchValue = serachItem[\"species\"];\n            let searchValue1 = serachItem[\"status\"];\n            let searchValue2 = serachItem[\"name\"];\n            response = await axios.get(\n              `${API_URL}/character/?page=${APIpage}&status=${searchValue1}&species=${searchValue}&name=${searchValue2}`\n            );\n          } else if (serachItem[\"startDate\"] && serachItem[\"endDate\"]) {\n            let i = 1;\n\n            while (totalCharacter > i) {\n              let responseDate = await axios.get(`${API_URL}/character/${i}`);\n              i++;\n              if (\n                serachItem[\"startDate\"] <= responseDate.data.created &&\n                responseDate.data.created <= serachItem[\"endDate\"]\n              ) {\n                dataArray.push(responseDate.data);\n              }\n            }\n          }\n        }\n        setCharacter(response.data.results);\n        setTotalCharacter(response.data.info.count);\n        setTotalPage(response.data.info.pages);\n        if (dataArray.length != 0) {\n          console.log(dataArray);\n          setCharacter(dataArray);\n        }\n      }\n\n      const pageNo = (totalPage) => {\n        const pageArr = [];\n        for (let i = 1; i <= totalPage; i++) {\n          pageArr.push(i);\n        }\n        setPageNoArr(pageArr);\n      };\n      pageNo(totalPage);\n      getcharacter();\n    } catch (err) {}\n  }, [page, serachItem, APIpage, totalPage]);\n\n  function changePage(event, direction) {\n    event.preventDefault();\n\n    if (direction === \"before\" && page > 1) {\n      setPage((page -= 1));\n\n      if (page % 2 !== 0) {\n        setAPIPage((APIpage -= 1));\n      }\n    } else if (direction === \"after\" && totalPage > page) {\n      setPage((page += 1));\n\n      if (page % 2 !== 0) {\n        setAPIPage((APIpage += 1));\n      }\n    }\n    return true;\n  }\n\n  const handlePageSelertor = (e, elem) => {\n    e.preventDefault();\n    setAPIPage(elem);\n  };\n\n  const handleSearch = (event) => {\n    event.preventDefault();\n    const { species, name, status, startDate, endDate } = event.target;\n\n    setSeachItem({\n      species: species.value,\n      name: name.value,\n      status: status.value,\n      startDate: startDate.value,\n      endDate: endDate.value,\n    });\n  };\n\n  const hanldDetails = (e, number, show) => {\n    e.preventDefault();\n\n    if (show == \"close\") {\n      setShowDetail(false);\n    } else {\n      setCharacterNo(number);\n      setShowDetail(true);\n    }\n  };\n\n  const handleDateSearch = (start, end) => {\n    let dataArray = [];\n    // dataArray = character.filter((elem) => {\n    //   return start <= elem.created && elem.created <= end;\n    // });\n    let i = 1;\n\n    try {\n      async function getDateCharacter() {\n        while (totalCharacter > i) {\n          let responseDate = await axios.get(`${API_URL}/character/${i}`);\n          i++;\n          if (\n            start <= responseDate.data.created &&\n            responseDate.data.created <= end\n          ) {\n            dataArray.push(responseDate.data);\n          }\n        }\n\n        setCharacter(dataArray);\n      }\n      getDateCharacter();\n    } catch (err) {\n      console.log(\"Date Err\");\n    }\n  };\n\n  return (\n    <>\n      <h1>Rick && Morty =)</h1>\n      <Dropdown>\n        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n          {APIpage} PAGE\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          {pageNoArr.map((elem) => (\n            <Dropdown.Item onClick={(e) => handlePageSelertor(e, elem)}>\n              {elem} PAGE\n            </Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n      {/* Species\n      <input\n        placeholder=\"Filter Species\"\n        name=\"species\"\n        onChange={(e) => handleSearch(e, \"species\")}\n      />\n      Name\n      <input\n        placeholder=\"Filter Name\"\n        name=\"name\"\n        onChange={(e) => handleSearch(e, \"name\")}\n      />\n      Status\n      <input\n        placeholder=\"Filter Status\"\n        name=\"status\"\n        onChange={(e) => handleSearch(e, \"status\")}\n      /> */}\n      <form onSubmit={handleSearch}>\n        <label>Species</label>\n        <input placeholder=\"Filter Species\" name=\"species\" />\n        <label>Name</label>\n        <input placeholder=\"Filter Name\" name=\"name\" />\n        <label>Status</label>\n        <input placeholder=\"Filter Status\" name=\"status\" />\n        <label>Date</label>\n\n        <input placeholder=\"Filter Status\" name=\"startDate\" type=\"date\" />\n\n        <input placeholder=\"Filter Status\" name=\"endDate\" type=\"date\" />\n        <button type=\"submit\">Submit</button>\n      </form>\n      <grid>\n        {character &&\n          character.slice(0, 10).map((element, index) => (\n            <>\n              <div\n                key={index}\n                className=\"item\"\n                component={Link}\n                to={`/singleCharacter/${element.id}`}\n              >\n                <div href={`/singleCharater/${element.id}`}>\n                  <img src={element.image} alt=\"img\" />\n                  <br />\n                  <span>{element.name}</span>\n                  <span>{element.species}</span>\n                  <br />\n                  <span>{element.status}</span>\n                  <span>{element.created}</span>\n                  <Button\n                    onClick={(e) => {\n                      hanldDetails(e, element.id, \"open\");\n                    }}\n                  >\n                    Details\n                  </Button>\n                </div>\n              </div>\n            </>\n          ))}\n        {showDetail && <Backdrop />}\n        {showDetail && (\n          <SingleCharater\n            characterNo={characterNo}\n            onHandleDetails={hanldDetails}\n          />\n        )}\n      </grid>\n      <Button onClick={(e) => changePage(e, \"before\")}>-</Button>\n      <span>{page}</span>\n      <Button onClick={(e) => changePage(e, \"after\")}>+</Button>\n    </>\n  );\n}\nexport default Character;\n"]},"metadata":{},"sourceType":"module"}