{"ast":null,"code":"var _jsxFileName = \"/Users/annasun/Desktop/IH-MAY-2021/Assignment/rick_and_morty/src/Component/singleCharater.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./singleCharacter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SingleCharater(props) {\n  _s();\n\n  const {\n    characterNo\n  } = props;\n  const [details, setDetails] = useState(null);\n  const [no, setNo] = useState(null);\n  useEffect(() => {\n    try {\n      async function getcharacter(character) {\n        let response = await axios.get(`https://rickandmortyapi.com/api/character/${character}`);\n        console.log(response.data);\n        setDetails(response.data);\n      }\n\n      async function getEpisode() {\n        let response = await axios.get(`https://rickandmortyapi.com/api/episode/${no}`);\n\n        if (response.status == 200) {\n          console.log(\"grap\");\n        } else {\n          console.log(\"fuck up\");\n        }\n      }\n\n      getEpisode();\n      getcharacter(characterNo);\n    } catch (err) {\n      console.log(err);\n    }\n  }, [characterNo, no]);\n\n  const handleNo = e => {\n    e.preventDefault();\n    console.log(e.target.value);\n    setNo(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: details && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              props.onHandleDetails(e, null, \"close\");\n            },\n            children: \"XXX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"episode\",\n            onClick: e => {\n              handleNo(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: details.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: details.image,\n            alt: \"character\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Status : \", details.status, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), \"Species : \", details.species, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), \"Gender : \", details.gender, \"Orign : \", details.origin.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), \"Episode :\", details.episode.map((ele, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Appeared Episode : EP\", ele.replace(/[^0-9]/g, \"\")]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SingleCharater, \"/yCDYr58EXsGIPkat7noUXSmQ1U=\");\n\n_c = SingleCharater;\nexport default SingleCharater;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleCharater\");","map":{"version":3,"sources":["/Users/annasun/Desktop/IH-MAY-2021/Assignment/rick_and_morty/src/Component/singleCharater.js"],"names":["axios","React","useEffect","useState","SingleCharater","props","characterNo","details","setDetails","no","setNo","getcharacter","character","response","get","console","log","data","getEpisode","status","err","handleNo","e","preventDefault","target","value","onHandleDetails","name","image","species","gender","origin","episode","map","ele","index","replace"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,uBAAP;;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,KAAxB;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACM,EAAD,EAAKC,KAAL,IAAcP,QAAQ,CAAC,IAAD,CAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACF,qBAAeS,YAAf,CAA4BC,SAA5B,EAAuC;AACrC,YAAIC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAClB,6CAA4CF,SAAU,EADpC,CAArB;AAGAG,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACAT,QAAAA,UAAU,CAACK,QAAQ,CAACI,IAAV,CAAV;AACD;;AAED,qBAAeC,UAAf,GAA4B;AAC1B,YAAIL,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAClB,2CAA0CL,EAAG,EAD3B,CAArB;;AAGA,YAAII,QAAQ,CAACM,MAAT,IAAmB,GAAvB,EAA4B;AAC1BJ,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,SAFD,MAEO;AACLD,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;AACF;;AACDE,MAAAA,UAAU;AACVP,MAAAA,YAAY,CAACL,WAAD,CAAZ;AACD,KArBD,CAqBE,OAAOc,GAAP,EAAY;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACD;AACF,GAzBQ,EAyBN,CAACd,WAAD,EAAcG,EAAd,CAzBM,CAAT;;AA2BA,QAAMY,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYM,CAAC,CAACE,MAAF,CAASC,KAArB;AACAf,IAAAA,KAAK,CAACY,CAAC,CAACE,MAAF,CAASC,KAAV,CAAL;AACD,GAJD;;AAMA,sBACE;AAAA,2BACE;AAAA,gBACGlB,OAAO,iBACN;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AACE,YAAA,OAAO,EAAGe,CAAD,IAAO;AACdjB,cAAAA,KAAK,CAACqB,eAAN,CAAsBJ,CAAtB,EAAyB,IAAzB,EAA+B,OAA/B;AACD,aAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AACE,YAAA,IAAI,EAAC,SADP;AAEE,YAAA,OAAO,EAAGA,CAAD,IAAO;AACdD,cAAAA,QAAQ,CAACC,CAAD,CAAR;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,kBATF,eAeE;AAAA,sBAAKf,OAAO,CAACoB;AAAb;AAAA;AAAA;AAAA;AAAA,kBAfF,eAgBE;AAAK,YAAA,GAAG,EAAEpB,OAAO,CAACqB,KAAlB;AAAyB,YAAA,GAAG,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAhBF,eAiBE;AAAA,oCACYrB,OAAO,CAACY,MADpB,eAEE;AAAA;AAAA;AAAA;AAAA,oBAFF,gBAGaZ,OAAO,CAACsB,OAHrB,eAIE;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKYtB,OAAO,CAACuB,MALpB,cAMWvB,OAAO,CAACwB,MAAR,CAAeJ,IAN1B,eAOE;AAAA;AAAA;AAAA;AAAA,oBAPF,eASGpB,OAAO,CAACyB,OAAR,CAAgBC,GAAhB,CAAoB,CAACC,GAAD,EAAMC,KAAN,kBACnB;AAAA,kDACwBD,GAAG,CAACE,OAAJ,CAAY,SAAZ,EAAuB,EAAvB,CADxB;AAAA,eAAUD,KAAV;AAAA;AAAA;AAAA;AAAA,oBADD,CATH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA2CD;;GAjFQ/B,c;;KAAAA,c;AAmFT,eAAeA,cAAf","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./singleCharacter.css\";\n\nfunction SingleCharater(props) {\n  const { characterNo } = props;\n  const [details, setDetails] = useState(null);\n  const [no, setNo] = useState(null);\n\n  useEffect(() => {\n    try {\n      async function getcharacter(character) {\n        let response = await axios.get(\n          `https://rickandmortyapi.com/api/character/${character}`\n        );\n        console.log(response.data);\n        setDetails(response.data);\n      }\n\n      async function getEpisode() {\n        let response = await axios.get(\n          `https://rickandmortyapi.com/api/episode/${no}`\n        );\n        if (response.status == 200) {\n          console.log(\"grap\");\n        } else {\n          console.log(\"fuck up\");\n        }\n      }\n      getEpisode();\n      getcharacter(characterNo);\n    } catch (err) {\n      console.log(err);\n    }\n  }, [characterNo, no]);\n\n  const handleNo = (e) => {\n    e.preventDefault();\n    console.log(e.target.value);\n    setNo(e.target.value);\n  };\n\n  return (\n    <>\n      <div>\n        {details && (\n          <>\n            <div className=\"container\">\n              <button\n                onClick={(e) => {\n                  props.onHandleDetails(e, null, \"close\");\n                }}\n              >\n                XXX\n              </button>\n\n              <input\n                name=\"episode\"\n                onClick={(e) => {\n                  handleNo(e);\n                }}\n              />\n              <h1>{details.name}</h1>\n              <img src={details.image} alt=\"character\" />\n              <span>\n                Status : {details.status}\n                <br />\n                Species : {details.species}\n                <br />\n                Gender : {details.gender}\n                Orign : {details.origin.name}\n                <br />\n                Episode :\n                {details.episode.map((ele, index) => (\n                  <div key={index}>\n                    Appeared Episode : EP{ele.replace(/[^0-9]/g, \"\")}\n                  </div>\n                ))}\n              </span>\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default SingleCharater;\n"]},"metadata":{},"sourceType":"module"}