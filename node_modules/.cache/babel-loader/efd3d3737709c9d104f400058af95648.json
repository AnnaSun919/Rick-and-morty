{"ast":null,"code":"var _jsxFileName = \"/Users/annasun/Desktop/IH-MAY-2021/Assignment/rick_and_morty/src/Component/Character/character.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Dropdownmenu from \"../DropdownMenu/DropDown\";\nimport DropdownItem from \"../DropdownMenu/DropdownItem\";\nimport axios from \"axios\";\nimport Backdrop from \"../Backdrop/Backdrop\";\nimport { API_URL } from \"../../config\";\nimport Search from \"./search\";\nimport SingleCharater from \"./singleCharater\";\nimport logo from \"../../img/Rick_and_Morty_logo.png\";\nimport useFetch from \"./useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Character() {\n  _s();\n\n  //setting page , for url\n  let [APIpage, setAPIPage] = useState(1);\n  const [characterNo, setCharacterNo] = useState(null); // const [pageNoArr, setPageNoArr] = useState([]);\n\n  const [date, setDate] = useState(false);\n  let [serachItem, setSeachItem] = useState(null);\n  const [searchOther, setSearchOther] = useState(false); // const [findNothing, setfindNothing] = useState(null);\n  //for showing single character info\n\n  const [showDetail, setShowDetail] = useState(false);\n  let [n, setn] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [pageNo, setPageNo] = useState(1);\n  const {\n    basic,\n    pageNoArr,\n    findNothing\n  } = useFetch(serachItem, searchOther, date, APIpage); // useEffect(() => {\n  //   async function getcharacter() {\n  //     let dataArray = [];\n  //     let response = await axios.get(`${API_URL}/character/?page=${APIpage}`);\n  //     if (serachItem) {\n  //       if (searchOther) {\n  //         let searchValue = serachItem[\"species\"];\n  //         let searchValue1 = serachItem[\"status\"];\n  //         let searchValue2 = serachItem[\"name\"];\n  //         try {\n  //           response = await axios.get(\n  //             `${API_URL}/character/?page=${APIpage}&status=${searchValue1}&species=${searchValue}&name=${searchValue2}`\n  //           );\n  //         } catch (err) {\n  //           setfindNothing(\"No Character found\");\n  //         }\n  //         if (date) {\n  //           let test = [];\n  //           let page = 1;\n  //           let totalPage = response.data.info.pages;\n  //           while (page <= totalPage) {\n  //             response = await axios.get(\n  //               `${API_URL}/character/?page=${page}&status=${searchValue1}&species=${searchValue}&name=${searchValue2}`\n  //             );\n  //             page++;\n  //             test.push(\n  //               response.data.results.filter((elem) => {\n  //                 return (\n  //                   serachItem[\"startDate\"] <= elem.created &&\n  //                   elem.created <= serachItem[\"endDate\"]\n  //                 );\n  //               })\n  //             );\n  //           }\n  //           dataArray = test.flat();\n  //         }\n  //       } else if (date) {\n  //         let response = await axios.get(\n  //           `${API_URL}/character/?page=${APIpage}`\n  //         );\n  //         let totalPage = response.data.info.pages;\n  //         let i = 1;\n  //         let test = [];\n  //         while (totalPage >= i) {\n  //           let responseData = await axios.get(\n  //             `${API_URL}/character/?page=${i}`\n  //           );\n  //           i++;\n  //           test.push(\n  //             responseData.data.results.filter((elem) => {\n  //               return (\n  //                 serachItem[\"startDate\"] <= elem.created &&\n  //                 elem.created <= serachItem[\"endDate\"]\n  //               );\n  //             })\n  //           );\n  //         }\n  //         dataArray = test.flat();\n  //       }\n  //     }\n  //     pageNo(response.data.info.count);\n  //     setBasic({\n  //       totalCharacter: response.data.info.count,\n  //       character: response.data.results,\n  //       totalPage: response.data.info.pages,\n  //     });\n  //     if (date) {\n  //       if (dataArray.length === 0) {\n  //         setfindNothing(\"Find no informaion\");\n  //       }\n  //       setBasic({\n  //         totalCharacter: dataArray.length,\n  //         character: dataArray,\n  //       });\n  //       pageNo(dataArray.length);\n  //     }\n  //   }\n  //   const pageNo = (totalCharacter) => {\n  //     let totalPage = 0;\n  //     totalCharacter % 10 === 0\n  //       ? (totalPage = totalCharacter / 10)\n  //       : (totalPage = totalCharacter / 10 + 1);\n  //     const pageArr = [];\n  //     for (let i = 1; i <= totalPage; i++) {\n  //       pageArr.push(i);\n  //     }\n  //     setPageNoArr(pageArr);\n  //   };\n  //   getcharacter();\n  // }, [serachItem, APIpage, date, searchOther]);\n\n  const handleSearch = event => {\n    event.preventDefault(); // setfindNothing(null);\n\n    setAPIPage(1);\n    setPageNo(1);\n    forShowItem(event, 1);\n    const {\n      species,\n      name,\n      status,\n      startDate,\n      endDate\n    } = event.target;\n\n    if (startDate.value, endDate.value) {\n      setDate(true);\n    }\n\n    if (species.value || species.value || name.value) {\n      setSearchOther(true);\n    } else if (!startDate.value, !endDate.value) {\n      setDate(false);\n    }\n\n    setSeachItem({\n      species: species.value,\n      name: name.value,\n      status: status.value,\n      startDate: startDate.value,\n      endDate: endDate.value\n    });\n  };\n\n  const hanldDetails = (e, number, show) => {\n    e.preventDefault();\n\n    if (show === \"close\") {\n      setShowDetail(false);\n    } else {\n      setCharacterNo(number);\n      setShowDetail(true);\n    }\n  };\n\n  const pageHelper = elem => {\n    setPageNo(elem);\n\n    if (date) {\n      setn(elem * 10 - 10, elem * 10);\n    } else {\n      if (elem % 2 === 0) {\n        setn(10);\n      } else {\n        setn(0);\n      }\n    }\n  };\n\n  const forShowItem = (e, elem) => {\n    e.preventDefault();\n\n    if (!date) {\n      elem % 2 === 0 ? setAPIPage(elem / 2) : setAPIPage(Math.ceil(elem / 2));\n    }\n\n    pageHelper(elem);\n  };\n\n  const handleClear = event => {\n    event.preventDefault();\n    Array.from(document.querySelectorAll(\"input\")).forEach(input => input.value = \"\");\n    setDate(false);\n  };\n\n  const forOpen = () => {\n    setOpen(!open);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"rick and morty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n      onOpen: forOpen,\n      open: open,\n      pageNo: pageNo,\n      children: /*#__PURE__*/_jsxDEV(Dropdownmenu, {\n        props: pageNoArr,\n        onShow: forShowItem,\n        onOpen: forOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      handleSearch: handleSearch,\n      handleClear: handleClear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: findNothing && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: findNothing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), !findNothing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character_container\",\n      children: basic.character && basic.character.slice(n, n + 10).map((element, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          onClick: e => {\n            hanldDetails(e, element.id, \"open\");\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: element.image,\n            alt: \"img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.species\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.created.slice(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this), showDetail && /*#__PURE__*/_jsxDEV(Backdrop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 22\n    }, this), showDetail && /*#__PURE__*/_jsxDEV(SingleCharater, {\n      characterNo: characterNo,\n      onHandleDetails: hanldDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Character, \"gDoIgZven4Xe3zCrgn6ngDdAIsc=\", false, function () {\n  return [useFetch];\n});\n\n_c = Character;\nexport default Character;\n\nvar _c;\n\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"sources":["/Users/annasun/Desktop/IH-MAY-2021/Assignment/rick_and_morty/src/Component/Character/character.js"],"names":["React","useState","useEffect","Dropdownmenu","DropdownItem","axios","Backdrop","API_URL","Search","SingleCharater","logo","useFetch","Character","APIpage","setAPIPage","characterNo","setCharacterNo","date","setDate","serachItem","setSeachItem","searchOther","setSearchOther","showDetail","setShowDetail","n","setn","open","setOpen","pageNo","setPageNo","basic","pageNoArr","findNothing","handleSearch","event","preventDefault","forShowItem","species","name","status","startDate","endDate","target","value","hanldDetails","e","number","show","pageHelper","elem","Math","ceil","handleClear","Array","from","document","querySelectorAll","forEach","input","forOpen","character","slice","map","element","index","id","image","created"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Dropdownmenu from \"../DropdownMenu/DropDown\";\nimport DropdownItem from \"../DropdownMenu/DropdownItem\";\nimport axios from \"axios\";\nimport Backdrop from \"../Backdrop/Backdrop\";\nimport { API_URL } from \"../../config\";\nimport Search from \"./search\";\nimport SingleCharater from \"./singleCharater\";\nimport logo from \"../../img/Rick_and_Morty_logo.png\";\nimport useFetch from \"./useFetch\";\n\nfunction Character() {\n  //setting page , for url\n  let [APIpage, setAPIPage] = useState(1);\n  const [characterNo, setCharacterNo] = useState(null);\n\n  // const [pageNoArr, setPageNoArr] = useState([]);\n  const [date, setDate] = useState(false);\n\n  let [serachItem, setSeachItem] = useState(null);\n  const [searchOther, setSearchOther] = useState(false);\n  // const [findNothing, setfindNothing] = useState(null);\n\n  //for showing single character info\n  const [showDetail, setShowDetail] = useState(false);\n\n  let [n, setn] = useState(0);\n\n  const [open, setOpen] = useState(false);\n  const [pageNo, setPageNo] = useState(1);\n\n  const { basic, pageNoArr, findNothing } = useFetch(\n    serachItem,\n    searchOther,\n    date,\n    APIpage\n  );\n\n  // useEffect(() => {\n  //   async function getcharacter() {\n  //     let dataArray = [];\n\n  //     let response = await axios.get(`${API_URL}/character/?page=${APIpage}`);\n\n  //     if (serachItem) {\n  //       if (searchOther) {\n  //         let searchValue = serachItem[\"species\"];\n  //         let searchValue1 = serachItem[\"status\"];\n  //         let searchValue2 = serachItem[\"name\"];\n  //         try {\n  //           response = await axios.get(\n  //             `${API_URL}/character/?page=${APIpage}&status=${searchValue1}&species=${searchValue}&name=${searchValue2}`\n  //           );\n  //         } catch (err) {\n  //           setfindNothing(\"No Character found\");\n  //         }\n\n  //         if (date) {\n  //           let test = [];\n  //           let page = 1;\n  //           let totalPage = response.data.info.pages;\n  //           while (page <= totalPage) {\n  //             response = await axios.get(\n  //               `${API_URL}/character/?page=${page}&status=${searchValue1}&species=${searchValue}&name=${searchValue2}`\n  //             );\n  //             page++;\n\n  //             test.push(\n  //               response.data.results.filter((elem) => {\n  //                 return (\n  //                   serachItem[\"startDate\"] <= elem.created &&\n  //                   elem.created <= serachItem[\"endDate\"]\n  //                 );\n  //               })\n  //             );\n  //           }\n\n  //           dataArray = test.flat();\n  //         }\n  //       } else if (date) {\n  //         let response = await axios.get(\n  //           `${API_URL}/character/?page=${APIpage}`\n  //         );\n\n  //         let totalPage = response.data.info.pages;\n  //         let i = 1;\n  //         let test = [];\n\n  //         while (totalPage >= i) {\n  //           let responseData = await axios.get(\n  //             `${API_URL}/character/?page=${i}`\n  //           );\n  //           i++;\n\n  //           test.push(\n  //             responseData.data.results.filter((elem) => {\n  //               return (\n  //                 serachItem[\"startDate\"] <= elem.created &&\n  //                 elem.created <= serachItem[\"endDate\"]\n  //               );\n  //             })\n  //           );\n  //         }\n  //         dataArray = test.flat();\n  //       }\n  //     }\n\n  //     pageNo(response.data.info.count);\n  //     setBasic({\n  //       totalCharacter: response.data.info.count,\n  //       character: response.data.results,\n  //       totalPage: response.data.info.pages,\n  //     });\n\n  //     if (date) {\n  //       if (dataArray.length === 0) {\n  //         setfindNothing(\"Find no informaion\");\n  //       }\n\n  //       setBasic({\n  //         totalCharacter: dataArray.length,\n  //         character: dataArray,\n  //       });\n\n  //       pageNo(dataArray.length);\n  //     }\n  //   }\n\n  //   const pageNo = (totalCharacter) => {\n  //     let totalPage = 0;\n  //     totalCharacter % 10 === 0\n  //       ? (totalPage = totalCharacter / 10)\n  //       : (totalPage = totalCharacter / 10 + 1);\n\n  //     const pageArr = [];\n  //     for (let i = 1; i <= totalPage; i++) {\n  //       pageArr.push(i);\n  //     }\n\n  //     setPageNoArr(pageArr);\n  //   };\n\n  //   getcharacter();\n  // }, [serachItem, APIpage, date, searchOther]);\n\n  const handleSearch = (event) => {\n    event.preventDefault();\n    // setfindNothing(null);\n    setAPIPage(1);\n    setPageNo(1);\n    forShowItem(event, 1);\n\n    const { species, name, status, startDate, endDate } = event.target;\n    if ((startDate.value, endDate.value)) {\n      setDate(true);\n    }\n    if (species.value || species.value || name.value) {\n      setSearchOther(true);\n    } else if ((!startDate.value, !endDate.value)) {\n      setDate(false);\n    }\n\n    setSeachItem({\n      species: species.value,\n      name: name.value,\n      status: status.value,\n      startDate: startDate.value,\n      endDate: endDate.value,\n    });\n  };\n\n  const hanldDetails = (e, number, show) => {\n    e.preventDefault();\n\n    if (show === \"close\") {\n      setShowDetail(false);\n    } else {\n      setCharacterNo(number);\n      setShowDetail(true);\n    }\n  };\n\n  const pageHelper = (elem) => {\n    setPageNo(elem);\n    if (date) {\n      setn(elem * 10 - 10, elem * 10);\n    } else {\n      if (elem % 2 === 0) {\n        setn(10);\n      } else {\n        setn(0);\n      }\n    }\n  };\n\n  const forShowItem = (e, elem) => {\n    e.preventDefault();\n    if (!date) {\n      elem % 2 === 0 ? setAPIPage(elem / 2) : setAPIPage(Math.ceil(elem / 2));\n    }\n    pageHelper(elem);\n  };\n\n  const handleClear = (event) => {\n    event.preventDefault();\n    Array.from(document.querySelectorAll(\"input\")).forEach(\n      (input) => (input.value = \"\")\n    );\n    setDate(false);\n  };\n\n  const forOpen = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <div className=\"box\">\n      <img src={logo} alt=\"rick and morty\" />\n      <DropdownItem onOpen={forOpen} open={open} pageNo={pageNo}>\n        <Dropdownmenu props={pageNoArr} onShow={forShowItem} onOpen={forOpen} />\n      </DropdownItem>\n      <Search handleSearch={handleSearch} handleClear={handleClear} />\n      <span>{findNothing && <span>{findNothing}</span>}</span>\n      {!findNothing && (\n        <div className=\"character_container\">\n          {basic.character &&\n            basic.character.slice(n, n + 10).map((element, index) => (\n              <>\n                <div\n                  key={index}\n                  className=\"item\"\n                  onClick={(e) => {\n                    hanldDetails(e, element.id, \"open\");\n                  }}\n                >\n                  <img src={element.image} alt=\"img\" />\n                  <br />\n                  <span>{element.name}</span>\n                  <br />\n                  <span>{element.species}</span>\n                  <br />\n                  <span>{element.status}</span>\n                  <br />\n                  <span>{element.created.slice(0, 10)}</span>\n                  <br />\n                </div>\n              </>\n            ))}\n        </div>\n      )}\n      {showDetail && <Backdrop />}\n      {showDetail && (\n        <SingleCharater\n          characterNo={characterNo}\n          onHandleDetails={hanldDetails}\n        />\n      )}\n    </div>\n  );\n}\nexport default Character;\n"]},"metadata":{},"sourceType":"module"}