{"ast":null,"code":"var _jsxFileName = \"/Users/annasun/Desktop/IH-MAY-2021/Assignment/rick_and_morty/src/Component/character.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Backdrop from \"./Backdrop/Backdrop\";\nimport { API_URL } from \"../config\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport SingleCharater from \"./singleCharater\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Character() {\n  _s();\n\n  //what unfiinsh: 10 items a page\n  //jest\n  //dataArray empty does show error\n  //find no itme no error\n  //too many useState\n  //page arr can it be easier ??\n  //for the episode info loop through or not ,\n  // responsive =)\n  let [basic, setBasic] = useState({\n    totalPage: \"\",\n    totalCharacter: \"\",\n    APIpage: \"\",\n    character: \"\"\n  });\n  let [n, setn] = useState(0);\n  const [showItem, setShowItem] = useState(null);\n  let [totalPage, setTotalPage] = useState(null);\n  let [totalCharacter, setTotalCharacter] = useState(null);\n  let [APIpage, setAPIPage] = useState(1);\n  let [showPage, setShowPage] = useState(1);\n  const [showDetail, setShowDetail] = useState(false);\n  const [characterNo, setCharacterNo] = useState(null);\n  const [character, setCharacter] = useState(null);\n  let [serachItem, setSeachItem] = useState(null);\n  const [pageNoArr, setPageNoArr] = useState([]);\n  const [first, setFirst] = useState(true);\n  useEffect(() => {\n    try {\n      async function getcharacter() {\n        let dataArray = [];\n        console.log(APIpage);\n        let response = await axios.get(`${API_URL}/character/?page=${APIpage}`);\n\n        if (serachItem) {\n          if (serachItem[\"status\"] || serachItem[\"species\"] || serachItem[\"name\"]) {\n            let searchValue = serachItem[\"species\"];\n            let searchValue1 = serachItem[\"status\"];\n            let searchValue2 = serachItem[\"name\"];\n            response = await axios.get(`${API_URL}/character/?page=${APIpage}&status=${searchValue1}&species=${searchValue}&name=${searchValue2}`);\n\n            if (serachItem[\"startDate\"] && serachItem[\"endDate\"]) {\n              console.log(\"date searchin\");\n              dataArray = response.data.results.filter(elem => {\n                return serachItem[\"startDate\"] <= elem.created && elem.created <= serachItem[\"endDate\"];\n              }); // if (dataArray.length === 0) {\n              //   setAPIPage((APIpage += 1));\n              // }\n            }\n          } else if (serachItem[\"startDate\"] && serachItem[\"endDate\"]) {\n            let i = 1;\n\n            while (totalCharacter > i) {\n              let responseDate = await axios.get(`${API_URL}/character/${i}`);\n              i++;\n\n              if (serachItem[\"startDate\"] <= responseDate.data.created && responseDate.data.created <= serachItem[\"endDate\"]) {\n                dataArray.push(responseDate.data);\n              }\n            }\n          }\n        }\n\n        if (first) {\n          setShowItem(response.data.results.slice(0, 10));\n        }\n\n        setCharacter(response.data.results);\n        setTotalCharacter(response.data.info.count);\n        setTotalPage(response.data.info.pages);\n\n        if (dataArray.length !== 0) {\n          setCharacter(dataArray);\n        }\n      }\n\n      const forShowItem = (e, elem) => {\n        elem % 2 === 0 ? setAPIPage(elem - 1) : setAPIPage(elem);\n\n        if (elem === 1) {\n          setShowItem(character.slice(0, 10));\n        } else if (elem % 2 === 0) {\n          setShowItem(character.slice(10, 20));\n        } // situation 1 = created date only\n        //dataArray(slice n + n+10), total page = items /10 , move page = move n\n        // situation 2 = created date plus other\n        // need to loop throught API pages , and get dataArray , dataArray(slice n + n+10), total page = items /10 , move page = move n\n        // situation 3 = only others\n        // 20 items a page , page move page = move n when\n\n      };\n\n      forShowItem();\n\n      const pageNo = totalPage => {\n        const pageArr = [];\n\n        for (let i = 1; i <= totalPage * 2; i++) {\n          pageArr.push(i);\n        }\n\n        setPageNoArr(pageArr);\n      };\n\n      pageNo(totalPage);\n      getcharacter();\n      console.log();\n    } catch (err) {\n      console.log(err);\n    }\n  }, [serachItem, APIpage, totalPage, totalCharacter, first]); // const handlePageSelertor = (e, elem) => {\n  //   e.preventDefault();\n  //   setAPIPage(elem);\n  // };\n\n  const handleSearch = event => {\n    event.preventDefault();\n    const {\n      species,\n      name,\n      status,\n      startDate,\n      endDate\n    } = event.target;\n    setAPIPage(1);\n    setSeachItem({\n      species: species.value,\n      name: name.value,\n      status: status.value,\n      startDate: startDate.value,\n      endDate: endDate.value\n    });\n  };\n\n  const hanldDetails = (e, number, show) => {\n    e.preventDefault();\n\n    if (show === \"close\") {\n      setShowDetail(false);\n    } else {\n      setCharacterNo(number);\n      setShowDetail(true);\n    }\n  };\n\n  const forShowItem = (e, elem) => {\n    elem % 2 === 0 ? setAPIPage(elem - 1) : setAPIPage(elem);\n\n    if (elem === 1) {} else if (elem % 2 === 0) {} // situation 1 = created date only\n    //dataArray(slice n + n+10), total page = items /10 , move page = move n\n    // situation 2 = created date plus other\n    // need to loop throught API pages , and get dataArray , dataArray(slice n + n+10), total page = items /10 , move page = move n\n    // situation 3 = only others\n    // 20 items a page , page move page = move n when\n\n  };\n\n  console.log(character);\n  console.log(showItem);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rick && Morty =)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        variant: \"success\",\n        id: \"dropdown-basic\",\n        children: [showPage, \" PAGE\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        children: pageNoArr.map(elem => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          onClick: e => forShowItem(e, elem),\n          children: [elem, \" PAGE\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Species\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Filter Species\",\n        name: \"species\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Filter Name\",\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Filter Status\",\n        name: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Created Date: From \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Filter Status\",\n        name: \"startDate\",\n        type: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), \"to\", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Filter Status\",\n        name: \"endDate\",\n        type: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character_container\",\n      children: showItem && showItem.map((element, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          onClick: e => {\n            hanldDetails(e, element.id, \"open\");\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: element.image,\n            alt: \"img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.species\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.created.slice(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), showDetail && /*#__PURE__*/_jsxDEV(Backdrop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 22\n    }, this), showDetail && /*#__PURE__*/_jsxDEV(SingleCharater, {\n      characterNo: characterNo,\n      onHandleDetails: hanldDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => forShowItem(e),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Character, \"aGc7LRaqrzoBKQN07M+D63JGqXA=\");\n\n_c = Character;\nexport default Character;\n\nvar _c;\n\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"sources":["/Users/annasun/Desktop/IH-MAY-2021/Assignment/rick_and_morty/src/Component/character.js"],"names":["React","useState","useEffect","Dropdown","axios","Backdrop","API_URL","SingleCharater","Character","basic","setBasic","totalPage","totalCharacter","APIpage","character","n","setn","showItem","setShowItem","setTotalPage","setTotalCharacter","setAPIPage","showPage","setShowPage","showDetail","setShowDetail","characterNo","setCharacterNo","setCharacter","serachItem","setSeachItem","pageNoArr","setPageNoArr","first","setFirst","getcharacter","dataArray","console","log","response","get","searchValue","searchValue1","searchValue2","data","results","filter","elem","created","i","responseDate","push","slice","info","count","pages","length","forShowItem","e","pageNo","pageArr","err","handleSearch","event","preventDefault","species","name","status","startDate","endDate","target","value","hanldDetails","number","show","map","element","index","id","image"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Backdrop from \"./Backdrop/Backdrop\";\nimport { API_URL } from \"../config\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport SingleCharater from \"./singleCharater\";\n\nfunction Character() {\n  //what unfiinsh: 10 items a page\n  //jest\n  //dataArray empty does show error\n  //find no itme no error\n  //too many useState\n  //page arr can it be easier ??\n  //for the episode info loop through or not ,\n  // responsive =)\n  let [basic, setBasic] = useState({\n    totalPage: \"\",\n    totalCharacter: \"\",\n    APIpage: \"\",\n    character: \"\",\n  });\n  let [n, setn] = useState(0);\n  const [showItem, setShowItem] = useState(null);\n  let [totalPage, setTotalPage] = useState(null);\n  let [totalCharacter, setTotalCharacter] = useState(null);\n  let [APIpage, setAPIPage] = useState(1);\n  let [showPage, setShowPage] = useState(1);\n  const [showDetail, setShowDetail] = useState(false);\n  const [characterNo, setCharacterNo] = useState(null);\n  const [character, setCharacter] = useState(null);\n  let [serachItem, setSeachItem] = useState(null);\n  const [pageNoArr, setPageNoArr] = useState([]);\n\n  const [first, setFirst] = useState(true);\n\n  useEffect(() => {\n    try {\n      async function getcharacter() {\n        let dataArray = [];\n        console.log(APIpage);\n        let response = await axios.get(`${API_URL}/character/?page=${APIpage}`);\n\n        if (serachItem) {\n          if (\n            serachItem[\"status\"] ||\n            serachItem[\"species\"] ||\n            serachItem[\"name\"]\n          ) {\n            let searchValue = serachItem[\"species\"];\n            let searchValue1 = serachItem[\"status\"];\n            let searchValue2 = serachItem[\"name\"];\n            response = await axios.get(\n              `${API_URL}/character/?page=${APIpage}&status=${searchValue1}&species=${searchValue}&name=${searchValue2}`\n            );\n            if (serachItem[\"startDate\"] && serachItem[\"endDate\"]) {\n              console.log(\"date searchin\");\n              dataArray = response.data.results.filter((elem) => {\n                return (\n                  serachItem[\"startDate\"] <= elem.created &&\n                  elem.created <= serachItem[\"endDate\"]\n                );\n              });\n              // if (dataArray.length === 0) {\n              //   setAPIPage((APIpage += 1));\n              // }\n            }\n          } else if (serachItem[\"startDate\"] && serachItem[\"endDate\"]) {\n            let i = 1;\n\n            while (totalCharacter > i) {\n              let responseDate = await axios.get(`${API_URL}/character/${i}`);\n              i++;\n              if (\n                serachItem[\"startDate\"] <= responseDate.data.created &&\n                responseDate.data.created <= serachItem[\"endDate\"]\n              ) {\n                dataArray.push(responseDate.data);\n              }\n            }\n          }\n        }\n        if (first) {\n          setShowItem(response.data.results.slice(0, 10));\n        }\n\n        setCharacter(response.data.results);\n        setTotalCharacter(response.data.info.count);\n        setTotalPage(response.data.info.pages);\n        if (dataArray.length !== 0) {\n          setCharacter(dataArray);\n        }\n      }\n\n      const forShowItem = (e, elem) => {\n        elem % 2 === 0 ? setAPIPage(elem - 1) : setAPIPage(elem);\n\n        if (elem === 1) {\n          setShowItem(character.slice(0, 10));\n        } else if (elem % 2 === 0) {\n          setShowItem(character.slice(10, 20));\n        }\n\n        // situation 1 = created date only\n        //dataArray(slice n + n+10), total page = items /10 , move page = move n\n\n        // situation 2 = created date plus other\n        // need to loop throught API pages , and get dataArray , dataArray(slice n + n+10), total page = items /10 , move page = move n\n        // situation 3 = only others\n        // 20 items a page , page move page = move n when\n      };\n      forShowItem();\n      const pageNo = (totalPage) => {\n        const pageArr = [];\n        for (let i = 1; i <= totalPage * 2; i++) {\n          pageArr.push(i);\n        }\n        setPageNoArr(pageArr);\n      };\n      pageNo(totalPage);\n      getcharacter();\n\n      console.log();\n    } catch (err) {\n      console.log(err);\n    }\n  }, [serachItem, APIpage, totalPage, totalCharacter, first]);\n\n  // const handlePageSelertor = (e, elem) => {\n  //   e.preventDefault();\n  //   setAPIPage(elem);\n  // };\n\n  const handleSearch = (event) => {\n    event.preventDefault();\n    const { species, name, status, startDate, endDate } = event.target;\n    setAPIPage(1);\n    setSeachItem({\n      species: species.value,\n      name: name.value,\n      status: status.value,\n      startDate: startDate.value,\n      endDate: endDate.value,\n    });\n  };\n\n  const hanldDetails = (e, number, show) => {\n    e.preventDefault();\n\n    if (show === \"close\") {\n      setShowDetail(false);\n    } else {\n      setCharacterNo(number);\n      setShowDetail(true);\n    }\n  };\n\n  const forShowItem = (e, elem) => {\n    elem % 2 === 0 ? setAPIPage(elem - 1) : setAPIPage(elem);\n\n    if (elem === 1) {\n    } else if (elem % 2 === 0) {\n    }\n\n    // situation 1 = created date only\n    //dataArray(slice n + n+10), total page = items /10 , move page = move n\n\n    // situation 2 = created date plus other\n    // need to loop throught API pages , and get dataArray , dataArray(slice n + n+10), total page = items /10 , move page = move n\n    // situation 3 = only others\n    // 20 items a page , page move page = move n when\n  };\n\n  console.log(character);\n\n  console.log(showItem);\n\n  return (\n    <>\n      <h1>Rick && Morty =)</h1>\n      <Dropdown>\n        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n          {showPage} PAGE\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          {pageNoArr.map((elem) => (\n            <Dropdown.Item onClick={(e) => forShowItem(e, elem)}>\n              {elem} PAGE\n            </Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n      {/* Species\n      <input\n        placeholder=\"Filter Species\"\n        name=\"species\"\n        onChange={(e) => handleSearch(e, \"species\")}\n      />\n      Name\n      <input\n        placeholder=\"Filter Name\"\n        name=\"name\"\n        onChange={(e) => handleSearch(e, \"name\")}\n      />\n      Status\n      <input\n        placeholder=\"Filter Status\"\n        name=\"status\"\n        onChange={(e) => handleSearch(e, \"status\")}\n      /> */}\n      <form onSubmit={handleSearch}>\n        <label>Species</label>\n        <input placeholder=\"Filter Species\" name=\"species\" />\n        <label>Name</label>\n        <input placeholder=\"Filter Name\" name=\"name\" />\n        <label>Status</label>\n        <input placeholder=\"Filter Status\" name=\"status\" />\n        <label>Created Date: From </label>\n        <input placeholder=\"Filter Status\" name=\"startDate\" type=\"date\" />\n        to\n        <input placeholder=\"Filter Status\" name=\"endDate\" type=\"date\" />\n        <button type=\"submit\">Submit</button>\n      </form>\n      <div className=\"character_container\">\n        {showItem &&\n          showItem.map((element, index) => (\n            <>\n              <div\n                key={index}\n                className=\"item\"\n                onClick={(e) => {\n                  hanldDetails(e, element.id, \"open\");\n                }}\n              >\n                <img src={element.image} alt=\"img\" />\n                <br />\n                <span>{element.name}</span>\n                <br />\n                <span>{element.species}</span>\n                <br />\n                <span>{element.status}</span>\n                <br />\n                <span>{element.created.slice(0, 10)}</span>\n                <br />\n              </div>\n            </>\n          ))}\n      </div>\n      {showDetail && <Backdrop />}\n      {showDetail && (\n        <SingleCharater\n          characterNo={characterNo}\n          onHandleDetails={hanldDetails}\n        />\n      )}\n      <button onClick={(e) => forShowItem(e)}>-</button>\n    </>\n  );\n}\nexport default Character;\n"]},"metadata":{},"sourceType":"module"}